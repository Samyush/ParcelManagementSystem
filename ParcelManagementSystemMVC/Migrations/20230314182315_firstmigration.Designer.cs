// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelManagementSystemMVC.Models;

#nullable disable

namespace ParcelManagementSystemMVC.Migrations
{
    [DbContext(typeof(ParcelDbContext))]
    [Migration("20230314182315_firstmigration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branchdb", b =>
                {
                    b.Property<int>("Branch_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_ID"));

                    b.Property<string>("Branch_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Branch_ID");

                    b.HasIndex("User_id");

                    b.ToTable("Branchdbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Jobtitledb", b =>
                {
                    b.Property<int>("job_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("job_id"));

                    b.Property<string>("job_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("job_id");

                    b.HasIndex("userId");

                    b.ToTable("jobtitledbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcels", b =>
                {
                    b.Property<int>("Percel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Percel_Id"));

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Actual_Weight")
                        .HasColumnType("real");

                    b.Property<string>("Address_of_Delivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Branch_Code")
                        .HasColumnType("int");

                    b.Property<int>("Branch_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_and_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption_of_Goods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Due_Paid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("G_Total")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History_of_Parcel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lolary_No")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Packets")
                        .HasColumnType("int");

                    b.Property<string>("Original_Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver_Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_of_Delivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tin_No")
                        .HasColumnType("int");

                    b.Property<string>("To_Pay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Values_of_Goods")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Way_Bill_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branchdbBranch_ID")
                        .HasColumnType("int");

                    b.Property<int>("history_id")
                        .HasColumnType("int");

                    b.Property<int>("historydbshistorey_id")
                        .HasColumnType("int");

                    b.Property<int>("roll_id")
                        .HasColumnType("int");

                    b.HasKey("Percel_Id");

                    b.HasIndex("branchdbBranch_ID");

                    b.HasIndex("historydbshistorey_id");

                    b.HasIndex("roll_id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.TotalStaffdb", b =>
                {
                    b.Property<int>("st_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("st_id"));

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id1")
                        .HasColumnType("int");

                    b.Property<string>("st_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("st_id");

                    b.HasIndex("User_id1");

                    b.ToTable("totalStaffdbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Branch")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("External")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("rolesdbroll_id")
                        .HasColumnType("int");

                    b.HasKey("User_id");

                    b.HasIndex("rolesdbroll_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.historydb", b =>
                {
                    b.Property<int>("historey_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("historey_id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modified_at")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("next_node")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shipment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<string>("vehicle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("historey_id");

                    b.ToTable("historydbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.rolesdb", b =>
                {
                    b.Property<int>("roll_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roll_id"));

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roll_id");

                    b.ToTable("rolesdbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branchdb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.User", null)
                        .WithMany("Branchs")
                        .HasForeignKey("User_id");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Jobtitledb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcels", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Branchdb", "branchdb")
                        .WithMany("parcels")
                        .HasForeignKey("branchdbBranch_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.historydb", "historydbs")
                        .WithMany("parcels")
                        .HasForeignKey("historydbshistorey_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.rolesdb", "rolesdb")
                        .WithMany("parcels")
                        .HasForeignKey("roll_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branchdb");

                    b.Navigation("historydbs");

                    b.Navigation("rolesdb");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.TotalStaffdb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.User", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.rolesdb", "rolesdb")
                        .WithMany("users")
                        .HasForeignKey("rolesdbroll_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rolesdb");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branchdb", b =>
                {
                    b.Navigation("parcels");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.User", b =>
                {
                    b.Navigation("Branchs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.historydb", b =>
                {
                    b.Navigation("parcels");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.rolesdb", b =>
                {
                    b.Navigation("parcels");

                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
