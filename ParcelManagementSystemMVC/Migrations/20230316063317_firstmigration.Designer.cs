// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelManagementSystemMVC.Models;

#nullable disable

namespace ParcelManagementSystemMVC.Migrations
{
    [DbContext(typeof(ParcelDbContext))]
    [Migration("20230316063317_firstmigration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Actiondb", b =>
                {
                    b.Property<int>("Action_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Action_Id"));

                    b.Property<int>("Parcel_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Action_Id");

                    b.HasIndex("Parcel_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("actiondb");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branchdb", b =>
                {
                    b.Property<int>("Branch_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_Id"));

                    b.Property<string>("BranchCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parcel_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Branch_Id");

                    b.HasIndex("Parcel_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Branchdbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.HistoryParcel", b =>
                {
                    b.Property<int>("History_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("History_Id"));

                    b.Property<int>("Parcel_Id")
                        .HasColumnType("int");

                    b.Property<int>("Percel_Id")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("History_Id");

                    b.HasIndex("Parcel_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("HistoryParcel");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.Chargedb", b =>
                {
                    b.Property<int>("Charge_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Charge_Id"));

                    b.Property<float>("Due_Paid")
                        .HasColumnType("real");

                    b.Property<float>("G_Total")
                        .HasColumnType("real");

                    b.Property<int>("Parcel_Id")
                        .HasColumnType("int");

                    b.Property<int>("Percel_Id")
                        .HasColumnType("int");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<float>("Vat")
                        .HasColumnType("real");

                    b.HasKey("Charge_Id");

                    b.HasIndex("Parcel_Id");

                    b.ToTable("chargedbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.Packagedb", b =>
                {
                    b.Property<int>("Package_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Package_Id"));

                    b.Property<float>("Actual_Wait")
                        .HasColumnType("real");

                    b.Property<string>("Descripton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lorry_No")
                        .HasColumnType("int");

                    b.Property<int>("No_of_Package")
                        .HasColumnType("int");

                    b.Property<int>("Parcel_Id")
                        .HasColumnType("int");

                    b.Property<int>("Percel_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tin")
                        .HasColumnType("int");

                    b.Property<float>("Values_of_goods")
                        .HasColumnType("real");

                    b.HasKey("Package_Id");

                    b.HasIndex("Parcel_Id");

                    b.ToTable("packagedbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.Parcels", b =>
                {
                    b.Property<int>("Percel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Percel_Id"));

                    b.Property<string>("Address_of_Delivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_and_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Next_Node")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Shipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcel_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_of_Delivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Way_Bill_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Percel_Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.UpdateParcel", b =>
                {
                    b.Property<int>("Update_Parcel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Update_Parcel_Id"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parcel_Id")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Update_Parcel_Id");

                    b.HasIndex("Parcel_Id");

                    b.ToTable("UpdateParcel");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Rolesdb", b =>
                {
                    b.Property<int>("Roll_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Roll_Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Roll_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("rolesdbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.users.Jobtitledb", b =>
                {
                    b.Property<int>("job_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("job_id"));

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<string>("job_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("job_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("job_id");

                    b.HasIndex("User_Id");

                    b.ToTable("jobtitledbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.users.TotalStaffdb", b =>
                {
                    b.Property<int>("St_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("St_Id"));

                    b.Property<DateTime>("St_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("St_Hire_Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("St_Salary")
                        .HasColumnType("real");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("St_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("totalStaffdbs");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.users.Users", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("External")
                        .HasColumnType("bit");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Actiondb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcel.Parcels", "Parcelid")
                        .WithMany()
                        .HasForeignKey("Parcel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.users.Users", "users")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcelid");

                    b.Navigation("users");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branchdb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcel.Parcels", "Parcels")
                        .WithMany()
                        .HasForeignKey("Parcel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.users.Users", "users")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcels");

                    b.Navigation("users");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.HistoryParcel", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcel.Parcels", "Parcel")
                        .WithMany()
                        .HasForeignKey("Parcel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.users.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.Chargedb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcel.Parcels", "Parcel")
                        .WithMany()
                        .HasForeignKey("Parcel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcel");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.Packagedb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcel.Parcels", "Parcel")
                        .WithMany()
                        .HasForeignKey("Parcel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcel");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcel.UpdateParcel", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcel.Parcels", "Parcel")
                        .WithMany()
                        .HasForeignKey("Parcel_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcel");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Rolesdb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.users.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.users.Jobtitledb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.users.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.users.TotalStaffdb", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.users.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
