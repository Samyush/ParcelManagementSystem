// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelManagementSystemMVC.Data;

#nullable disable

namespace ParcelManagementSystemMVC.Migrations
{
    [DbContext(typeof(ParcelDbContext))]
    [Migration("20230315041015_InitialDb1")]
    partial class InitialDb1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Actions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalStaff")
                        .HasColumnType("int");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.HistoryofParcel", b =>
                {
                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedTS")
                        .HasColumnType("datetime2");

                    b.Property<string>("NextNode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParcelId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ParcelId");

                    b.ToTable("HOP");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcels", b =>
                {
                    b.Property<int>("ParcelId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WayBillNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParcelId");

                    b.HasIndex("BranchId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Receiver", b =>
                {
                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int?>("ParcelId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReceiverId");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Send_Rec", b =>
                {
                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.HasKey("SenderId", "ReceiverId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Sender_Receiver");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Sender", b =>
                {
                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<int?>("ParcelId")
                        .HasColumnType("int");

                    b.HasKey("SenderId");

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.userList", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchesBranchId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("External")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("BranchesBranchId");

                    b.ToTable("ListofUsers");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.HistoryofParcel", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Parcels", "Parcels")
                        .WithMany()
                        .HasForeignKey("ParcelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parcels");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Parcels", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Branch", "Branches")
                        .WithMany("Parcels")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.Receiver", "Receivers")
                        .WithMany("Parcels")
                        .HasForeignKey("ParcelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.Sender", "Senders")
                        .WithMany("Parcels")
                        .HasForeignKey("ParcelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branches");

                    b.Navigation("Receivers");

                    b.Navigation("Senders");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Receiver", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.userList", "userLists")
                        .WithOne("Recievers")
                        .HasForeignKey("ParcelManagementSystemMVC.Models.Receiver", "ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("userLists");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Send_Rec", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Receiver", "Receivers")
                        .WithMany("Sender_Receiver")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ParcelManagementSystemMVC.Models.Sender", "Senders")
                        .WithMany("Sender_Receiver")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receivers");

                    b.Navigation("Senders");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Sender", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.userList", "userLists")
                        .WithOne("Senders")
                        .HasForeignKey("ParcelManagementSystemMVC.Models.Sender", "SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("userLists");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.userList", b =>
                {
                    b.HasOne("ParcelManagementSystemMVC.Models.Branch", "Branches")
                        .WithMany("userLists")
                        .HasForeignKey("BranchesBranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branches");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Branch", b =>
                {
                    b.Navigation("Parcels");

                    b.Navigation("userLists");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Receiver", b =>
                {
                    b.Navigation("Parcels");

                    b.Navigation("Sender_Receiver");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.Sender", b =>
                {
                    b.Navigation("Parcels");

                    b.Navigation("Sender_Receiver");
                });

            modelBuilder.Entity("ParcelManagementSystemMVC.Models.userList", b =>
                {
                    b.Navigation("Recievers")
                        .IsRequired();

                    b.Navigation("Senders")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
